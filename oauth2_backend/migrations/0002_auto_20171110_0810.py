# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-11-10 13:10
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('oauth2_backend', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, verbose_name='Code')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'document type',
                'verbose_name_plural': 'documents type',
                'permissions': (('list_documenttype', 'Can list documenttype'), ('get_documenttype', 'Can get documenttype')),
            },
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, verbose_name='Code')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'education level',
                'verbose_name_plural': 'educations level',
                'permissions': (('list_educationlevel', 'Can list educationlevel'), ('get_educationlevel', 'Can get educationlevel')),
            },
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, verbose_name='Code')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'ethnicity',
                'verbose_name_plural': 'ethnicitys',
                'permissions': (('list_ethnicity', 'Can list ethnicity'), ('get_ethnicity', 'Can get ethnicity')),
            },
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, verbose_name='Code')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'occupation',
                'verbose_name_plural': 'occupation',
                'permissions': (('list_occupation', 'Can list occupation'), ('get_occupation', 'Can get occupation')),
            },
        ),
        migrations.CreateModel(
            name='PensionScheme',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, verbose_name='Code')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'pension scheme',
                'verbose_name_plural': 'pensions scheme',
                'permissions': (('list_pensionscheme', 'Can list pensionscheme'), ('get_pensionscheme', 'Can get pensionscheme')),
            },
        ),
        migrations.CreateModel(
            name='PersonAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('zip_postal_code', models.CharField(max_length=20, verbose_name='Zip postal code')),
                ('ubigeo', models.CharField(blank=True, help_text='ubigeo', max_length=15, null=True, verbose_name='Ubigeo')),
                ('address_main', models.TextField(blank=True, null=True)),
                ('address_alt', models.TextField(blank=True, null=True)),
                ('is_mailing_address', models.BooleanField(default=False, verbose_name='Is mailing address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('registered_by', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'person address',
                'verbose_name_plural': 'persons address',
                'permissions': (('list_personaddress', 'Can list personaddress'), ('get_personaddress', 'Can get personaddress')),
            },
        ),
        migrations.CreateModel(
            name='PersonAddressType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, verbose_name='Code')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'person address type',
                'verbose_name_plural': 'person address type',
                'permissions': (('list_personaddresstype', 'Can list personaddresstype'), ('get_personaddresstype', 'Can get personaddresstype')),
            },
        ),
        migrations.CreateModel(
            name='PersonDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_number', models.CharField(max_length=100, verbose_name='Document number')),
                ('expiration_date', models.DateField(blank=True, null=True, verbose_name='Expiration date')),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('registered_by', models.TextField(blank=True, null=True)),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='persondocument_set', to='oauth2_backend.DocumentType')),
            ],
            options={
                'verbose_name': 'person document',
                'verbose_name_plural': 'persons document',
                'permissions': (('list_persondocument', 'Can list persondocument'), ('get_persondocument', 'Can get persondocument')),
            },
        ),
        migrations.CreateModel(
            name='PersonPhone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('area_code', models.CharField(blank=True, help_text='area code', max_length=5, null=True, verbose_name='Area code')),
                ('local_number', models.CharField(blank=True, help_text='local number', max_length=20, null=True, verbose_name='Local number')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is default')),
                ('is_sms_receiver', models.BooleanField(default=False, verbose_name='Is SMS receiver')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('registered_by', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'person phone',
                'verbose_name_plural': 'persons phone',
                'permissions': (('list_personphone', 'Can list personphone'), ('get_personphone', 'Can get personphone')),
            },
        ),
        migrations.CreateModel(
            name='PersonPhoneType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, verbose_name='Code')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'person phone type',
                'verbose_name_plural': 'person phone type',
                'permissions': (('list_personphonetype', 'Can list personphonetype'), ('get_personphonetype', 'Can get personphonetype')),
            },
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, verbose_name='Code')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
                ('is_adventist', models.BooleanField(default=False, verbose_name='Is adventist')),
            ],
            options={
                'verbose_name': 'religion',
                'verbose_name_plural': 'religions',
                'permissions': (('list_religion', 'Can list religion'), ('get_religion', 'Can get religion')),
            },
        ),
        migrations.AddField(
            model_name='person',
            name='acronym',
            field=models.CharField(blank=True, help_text='acronym', max_length=50, null=True, verbose_name='Acronym'),
        ),
        migrations.AddField(
            model_name='person',
            name='baptism_date',
            field=models.DateField(blank=True, null=True, verbose_name='baptism date'),
        ),
        migrations.AddField(
            model_name='person',
            name='birth_place',
            field=models.TextField(blank=True, help_text='birth place', null=True, verbose_name='Birth place'),
        ),
        migrations.AddField(
            model_name='person',
            name='blood_type',
            field=models.CharField(blank=True, help_text='blood type', max_length=50, null=True, verbose_name='Blood type'),
        ),
        migrations.AddField(
            model_name='person',
            name='country_residence_code',
            field=models.CharField(blank=True, help_text='country residence code', max_length=20, null=True, verbose_name='Country residence code'),
        ),
        migrations.AddField(
            model_name='person',
            name='decease_date',
            field=models.DateField(blank=True, null=True, verbose_name='decease date'),
        ),
        migrations.AddField(
            model_name='person',
            name='email',
            field=models.CharField(blank=True, help_text='email', max_length=50, null=True, verbose_name='Email'),
        ),
        migrations.AddField(
            model_name='person',
            name='father',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_father', to='oauth2_backend.Person'),
        ),
        migrations.AddField(
            model_name='person',
            name='gender',
            field=models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], help_text='gender M/F', max_length=10, null=True, verbose_name='Gender'),
        ),
        migrations.AddField(
            model_name='person',
            name='is_adventist',
            field=models.BooleanField(default=True, verbose_name='Is adventist'),
        ),
        migrations.AddField(
            model_name='person',
            name='is_legal_entity',
            field=models.BooleanField(default=False, verbose_name='Is legal entity'),
        ),
        migrations.AddField(
            model_name='person',
            name='marital_status',
            field=models.CharField(blank=True, choices=[('SINGLE', 'Masculino'), ('MARRIED', 'Married'), ('WIDOWED', 'Widowed'), ('DIVORCED', 'Divorced'), ('REGISTERED_PARTNERSHIP', 'Registered partnership'), ('OTHER', 'Other')], help_text='marital status', max_length=50, null=True, verbose_name='Marital status'),
        ),
        migrations.AddField(
            model_name='person',
            name='mother',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_mother', to='oauth2_backend.Person'),
        ),
        migrations.AddField(
            model_name='person',
            name='region_code',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Region code'),
        ),
        migrations.AddField(
            model_name='person',
            name='spouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_spouse', to='oauth2_backend.Person'),
        ),
        migrations.AddField(
            model_name='person',
            name='status',
            field=models.IntegerField(default=1, help_text='status: 0: eliminado, 1: sin validar, 2: validado', verbose_name='Status'),
        ),
        migrations.AddField(
            model_name='person',
            name='time_zone_info_id',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Time zone info id'),
        ),
        migrations.AddField(
            model_name='person',
            name='ubigeo',
            field=models.CharField(blank=True, help_text='ubigeo', max_length=15, null=True, verbose_name='Ubigeo'),
        ),
        migrations.AlterField(
            model_name='menu',
            name='module',
            field=models.CharField(choices=[('APP_001', 'APP_001'), ('APP_002', 'APP_002'), ('APP_003', 'APP_003'), ('APP_004', 'APP_004'), ('APP_005', 'APP_005'), ('APP_006', 'APP_006'), ('APP_007', 'APP_007'), ('APP_008', 'APP_008'), ('APP_009', 'APP_009'), ('APP_010', 'APP_010'), ('OTHER', 'Other'), ('BACKEND', 'Backend Manager'), ('ADMISION', 'Admisión'), ('WEB', 'Web informativa')], default='BACKEND', max_length=50, verbose_name='module'),
        ),
        migrations.AlterField(
            model_name='menu',
            name='state',
            field=models.CharField(help_text='state or section (estado o grupo de estados)', max_length=50, verbose_name='State path or section'),
        ),
        migrations.AlterField(
            model_name='person',
            name='first_name',
            field=models.CharField(help_text='primer nombre or legal name', max_length=50, verbose_name='First name or legal name'),
        ),
        migrations.AlterField(
            model_name='person',
            name='national_id_doc',
            field=models.CharField(blank=True, help_text='national identity document(DNI) or tax identification number(RUC)', max_length=20, null=True, verbose_name='National identity document or tax identification number'),
        ),
        migrations.AlterField(
            model_name='person',
            name='photo',
            field=models.ImageField(blank=True, default='persons/default.png', help_text='photo or logo', null=True, upload_to='persons', verbose_name='Photo'),
        ),
        migrations.AddField(
            model_name='personphone',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personphone_set', to='oauth2_backend.Person'),
        ),
        migrations.AddField(
            model_name='personphone',
            name='person_phone_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personphone_set', to='oauth2_backend.PersonPhoneType'),
        ),
        migrations.AddField(
            model_name='persondocument',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='persondocument_set', to='oauth2_backend.Person'),
        ),
        migrations.AddField(
            model_name='personaddress',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personaddress_set', to='oauth2_backend.Person'),
        ),
        migrations.AddField(
            model_name='personaddress',
            name='person_address_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personaddress_set', to='oauth2_backend.PersonAddressType'),
        ),
        migrations.AddField(
            model_name='person',
            name='education_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_set', to='oauth2_backend.EducationLevel'),
        ),
        migrations.AddField(
            model_name='person',
            name='ethnicity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_set', to='oauth2_backend.Ethnicity'),
        ),
        migrations.AddField(
            model_name='person',
            name='occupation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_set', to='oauth2_backend.Occupation'),
        ),
        migrations.AddField(
            model_name='person',
            name='pension_scheme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_set', to='oauth2_backend.PensionScheme'),
        ),
        migrations.AddField(
            model_name='person',
            name='religion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_set', to='oauth2_backend.Religion'),
        ),
    ]
